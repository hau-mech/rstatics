% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_internal_forces.R
\name{plot_internal_forces}
\alias{plot_internal_forces}
\title{Shear and moment diagrams}
\usage{
plot_internal_forces(
  .beam_length,
  .point_force,
  .point_moment = NULL,
  .distributed_load = NULL,
  .resolution = 0.001
)
}
\arguments{
\item{.beam_length}{Longitude of the beam in meters}

\item{.point_force}{A tibble with punctual forces, it must have two columns (x and force).
\code{x} is the position of the punctual force on the beam from the left edge \link{m}.
\code{force} is the magnitude of the force \link{N}; positive forces going up, and negative
forces going down. Support reactions should also be added in this data frame.}

\item{.point_moment}{A tibble with punctual moments, it must have two columns (x and moment).
\code{x} is the position of the punctual moment on the beam from the left edge \link{m}.
\code{moment} is the magnitude of the moment \link{N*m}; positive moment counter-clockwise rotation,
and negative moment clockwise rotation. Support moments (e.g. fixed support) should also be added in this data frame.}

\item{.distributed_load}{A tibble with the distributed load \link{N/m}. It must have two columns
(x and load), with the load values in steps of x = \code{.resolution}.}

\item{.resolution}{The beam is discretised for the calculations, by default
by steps of 0.001 m (but it can be adjusted if necessary).}
}
\value{
A ggplot2 object with the loads, shear diagram, and the bending moment.
}
\description{
Plot the shear and bending moment diagrams of a beam
}
\examples{
library(ggplot2)
library(patchwork)

# Problem definition

beam_length = 6

distributed_load <- tibble::tibble(x = seq(3, beam_length, 0.001)) |>
  mutate(load = -(200/3)*x)

point_force <- tibble::tribble( ~x, ~force,
                                0,  200,
                                6,  700)

# Diagrams
plot_internal_forces(.beam_length = beam_length,
                     .point_force = point_force,
                     .distributed_load = distributed_load
)
}
